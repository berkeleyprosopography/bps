---
- hosts: all
  sudo: true
  gather_facts: true
  vars_files:
    - variables.yml

  tasks:
    #- hostname: name=bpsdev
    - name: Add NewRelic deb
      apt_repository: repo='deb http://apt.newrelic.com/debian/ newrelic non-free' state=present
      when: newrelic_license_key is defined

    - name: Add NewRelic key
      shell: wget -O- https://download.newrelic.com/548C16BF.gpg | apt-key add -
      when: newrelic_license_key is defined

    - name: update apt cache
      apt: update_cache=yes

    - name: install required packages
      apt: name={{ item }} state=present
      with_items:
        - mysql-server
        - apache2
        - php5
        - php5-mysql
        - tomcat6
        - tomcat6-admin
        - openjdk-6-jre
        - openjdk-6-jdk
        - libapache2-mod-jk
        - libmysql-java
        - php-pear
        - git
        - maven
        - python-pip
        - python-mysqldb


    - name: Install NewRelic monitor
      apt: name={{ item }} state=present
      with_items:
        - newrelic-sysmond
      when: newrelic_license_key is defined

    - name: Configure NewRelic
      shell: nrsysmond-config --set license_key={{newrelic_license_key}}
      notify: start_newrelic
      when: newrelic_license_key is defined

    - name: Set enviroment variables
      lineinfile: dest=/etc/environment state=present regexp="{{ item.key }}" line="{{ item.value }}"
      with_items:
        - { key: '^BPS_JEESERVER_HOME', value : 'BPS_JEESERVER_HOME=/var/lib/tomcat6/' }
        - { key: '^BPS_WEBROOT', value : 'BPS_WEBROOT=/var/www/{{ project_name }}' }
        - { key: '^DB_USER', value : 'DB_USER={{ db_user }}'}
        - { key: '^DB_PASSWORD', value : 'DB_PASSWORD={{ db_password }}'}
        - { key: '^DB_PASSWORD_BPS', value : 'DB_PASSWORD_BPS={{ db_password }}'}
        - { key: '^BPS_CORPORA', value : 'BPS_CORPORA={{ project_root }}/corpora'}
        - { key: '^CLASSPATH', value : 'CLASSPATH=/usr/share/java/mysql.jar'}
      notify: source environment

    - name: Start MySQL Database server
      shell: service mysql start

    - name: Set user privileges
      mysql_user:
        login_host: 127.0.0.1
        login_port: 3306
        login_user: "root"
        login_password: "{{db_password}}"
        user: "{{db_user}}"
        password: "{{db_password}}"
        priv: "*.*:ALL,GRANT"
        state: present
        check_implicit_admin: True

    - name: install MDB2 mysql support via PEAR
      command: pear install -a MDB2_Driver_mysql
      ignore_errors: yes

    - name: install HTTP_Request2 support via PEAR
      command: pear install HTTP_Request2
      ignore_errors: yes

    - name: enabled mod_rewrite
      apache2_module: name=rewrite state=present
      notify:
        - restart apache2

    - name: enabled mod_proxy
      apache2_module: name=proxy state=present
      notify:
        - restart apache2

    - name: enabled mod_proxy_http
      apache2_module: name=proxy_http state=present
      notify:
        - restart apache2

    - name: Create the project directory.
      file: state=directory path={{ project_root }}

    - name: Create the corpora directory.
      file: state=directory path={{ project_root }}/corpora

    - name: Create user.
      user: home={{ project_root }}/home/ name={{ user }} password={{ user_password }} state=present

    - name: Update the project directory.
      file: group={{ user }} owner={{ user }} mode=755 state=directory path={{ project_root }}

    - name: Create the code directory.
      file: group={{ user }} owner={{ user }} mode=755 state=directory path={{ project_root }}/code/

    - name: Change permissions.
      shell: chown -R {{ user }}:{{ user }} {{ project_root }}

    - name: Pull sources from the repository.
      git: repo={{ project_repo }} dest={{ project_root }}/code version={{ branch }} accept_hostkey=yes
      sudo_user: "{{ user }}"

    - name: Create the webroot directory.
      file: state=directory path=/var/www/{{ project_name }}

    - name: Update the project directory.
      file: group={{ user }} owner={{ user }} mode=755 state=directory path=/var/www/{{ project_name }}

    - name: Build WAR with maven
      shell: mvn clean install -DskipTests chdir={{ project_root }}/code/code/bps/services
      #ignore_errors: yes
      environment:
        JAVA_HOME: /usr/lib/jvm/java-6-openjdk-amd64
        BPS_JEESERVER_HOME: /var/lib/tomcat6/
        BPS_WEBROOT: "/var/www/{{ project_name }}"
        DB_USER: "{{ db_user }}"
        DB_PASSWORD: "{{ db_password }}"
        DB_PASSWORD_BPS: "{{ db_password }}"
        BPS_CORPORA : "{{ project_root }}/corpora"
        CLASSPATH: /usr/share/java/mysql.jar:$CLASSPATH

    - name: Copy webroot files
      shell: mvn clean install -DskipTests chdir={{ project_root }}/bps/code/webcontent
      sudo: yes
      #ignore_errors: yes
      environment:
        JAVA_HOME: /usr/lib/jvm/java-6-openjdk-amd64
        BPS_JEESERVER_HOME: /var/lib/tomcat6/
        BPS_WEBROOT: "/var/www/{{ project_name }}"
        DB_USER: "{{ db_user }}"
        DB_PASSWORD: "{{ db_password }}"
        DB_PASSWORD_BPS: "{{ db_password }}"
        BPS_CORPORA : "{{ project_root }}/corpora"
        CLASSPATH: /usr/share/java/mysql.jar:$CLASSPATH

    - name: Create missing db directory
      file: path={{project_root}}/code/code/bps/services/common/target/db state=directory

    - name: Copy db init file
      copy: src=files/db/initdb.sql  dest={{ project_root }}/code/code/bps/services/common/target/db/initdb.sql


    - name: Create the DB
      shell: ant create_db chdir={{ project_root }}/code/code/bps/services
      environment:
        JAVA_HOME: /usr/lib/jvm/java-6-openjdk-amd64
        BPS_JEESERVER_HOME: /var/lib/tomcat6/
        BPS_WEBROOT: "/var/www/{{ project_name }}"
        DB_USER: "{{ db_user }}"
        DB_PASSWORD: "{{ db_password }}"
        DB_PASSWORD_BPS: "{{ db_password }}"
        BPS_CORPORA : "{{ project_root }}/corpora"
        CLASSPATH: /usr/share/java/mysql.jar:$CLASSPATH

    - name: Change ownership of  web directory.
      file: group=www-data owner=www-data mode=755 state=directory path=/var/www/{{ project_name }} recurse=yes

    - name: Adjust ownership level of  corpora directory.
      file: group={{user}} owner={{user}} mode=777 state=directory path={{ project_root }}/corpora recurse=yes

    - name: Install Apache configuration file.
      template: src=files/apache2/bps.j2 dest=/etc/apache2/sites-available/{{ project_name }}.conf backup=yes

  #  - name: Ensure that the default site is disabled
   #   command: rm /etc/apache2/sites-enabled/000-default removes=/etc/apache2/sites-enabled/000-default

  #  - name: make site available
 #     file: src=/etc/apache2/sites-available/{{ project_name }} dest=/etc/apache2/sites-enabled/{{ project_name }} state=link
  #    notify: restart apache2

    - name: Apache | Disable the default site
      action: command a2dissite 000-default
      tags: common

    - name: Apache | Remove existing index.html
      file: path=/var/www/index.html state=absent
      sudo: true

    - name: Apache | Enable bps site
      action: command a2ensite {{ project_name }}.conf
      tags: common

    - name: Upload tomcat users file
      template: src=files/tomcat/tomcat-users.conf dest=/etc/tomcat6/tomcat-users.xml #mode=0600

    - name: Creat symlink to mysql-connector-java
      file: src=/usr/share/java/mysql-connector-java.jar dest=/var/lib/tomcat6/shared/mysql-connector-java.jar state=link
      sudo: true

    - name: Remove existing Tomcat server configuration
      file: path=/etc/tomcat6/server.xml state=absent
      sudo: true

    - name: Setup tomcat server configuration
      copy: src=files/tomcat/server.xml dest=/etc/tomcat6/server.xml
      sudo: true
      notify: restart tomcat

    - name: Setup tomcat server configuration
      copy: src=files/tomcat/etc-default-tomcat6 dest=/etc/default/tomcat6
      sudo: true
      notify: restart tomcat
      when: java_debug is defined



  handlers:
  - name: restart apache2
    service: name=apache2 state=restarted
    environment:
      JAVA_HOME: /usr/lib/jvm/java-6-openjdk-amd64
      BPS_JEESERVER_HOME: /var/lib/tomcat6/
      BPS_WEBROOT: "/var/www/{{ project_name }}"
      DB_USER: "{{ db_user }}"
      DB_PASSWORD: "{{ db_password }}"
      DB_PASSWORD_BPS: "{{ db_password }}"
      BPS_CORPORA : "{{ project_root }}/corpora"
      CLASSPATH: /usr/share/java/mysql.jar:$CLASSPATH

  - name: restart tomcat
    service: name=tomcat6 state=restarted
    environment:
        JAVA_HOME: /usr/lib/jvm/java-6-openjdk-amd64
        BPS_JEESERVER_HOME: /var/lib/tomcat6/
        BPS_WEBROOT: "/var/www/{{ project_name }}"
        DB_USER: "{{ db_user }}"
        DB_PASSWORD: "{{ db_password }}"
        DB_PASSWORD_BPS: "{{ db_password }}"
        BPS_CORPORA : "{{ project_root }}/corpora"
        CLASSPATH: /usr/share/java/mysql.jar:$CLASSPATH

  - name: source environment
    shell: sudo -iu {{user}} . /etc/environment

  - name: start_newrelic
    service: name=newrelic-sysmond state=started

  - name: start_db
    service: name=mysql state=started