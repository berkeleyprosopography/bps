<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<groupId>edu.berkeley.bps.services</groupId>
		<artifactId>services</artifactId>
		<version>0.9.1-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>edu.berkeley.bps.services</groupId>
	<artifactId>services.webapp</artifactId>
	<name>bps.services.webapp</name>
	<version>0.9.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<bps.services.version>0.9.1-SNAPSHOT</bps.services.version>
		<!-- using the tomcat 6.x container -->
		<cargo.container>tomcat6x</cargo.container>
		<cargo.home>${env.BPS_JEESERVER_HOME}</cargo.home>
		<warfile>bps.services.webapp.war</warfile>
	</properties>

	<build>
		<!-- Rename to bps-services -->
		<finalName>bps.services.webapp</finalName>
		<!-- Filter resources using the build.properties pulled in below -->
		<resources>
				<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
				</resource>
		</resources>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<configuration> </configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.0</version>
					<configuration>
						<warSourceExcludes>WEB-INF/lib/*.jar</warSourceExcludes>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<executions>
						<execution>
							<id>classpath</id>
							<goals>
								<goal>build-classpath</goal>
							</goals>
							<configuration>
								<outputFile>classpath</outputFile>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- Get the base properties file, for use in this pom -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<version>1.0-alpha-2</version>
					<executions>
						<execution>
							<phase>initialize</phase>
							<goals>
								<goal>read-project-properties</goal>
							</goals>
							<configuration>
								<files>
									<file>../build.properties</file>
								</files>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<!-- cargo plugin -->
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>1.0</version>
					<configuration>
						<wait>false</wait>
						<!-- specifying the container -->
						<container>
							<containerId>${cargo.container}</containerId>
							<!-- assuming container is already installed -->
							<type>installed</type>
							<!-- path to the server -->
							<home>${cargo.home}</home>
							<timeout>300000</timeout>
						</container>
						<configuration>
							<type>existing</type>
							<home>${cargo.home}</home>
						</configuration>
						<deployer>
							<deployables>
								<deployable>
									<!-- location of war file -->
									<location>
										${basedir}/target/${warfile}
									</location>
								</deployable>
							</deployables>
						</deployer>
					</configuration>
					<executions>
						<execution>
							<phase>install</phase>
							<goals>
								<goal>deployer-deploy</goal>
							</goals>
						</execution>
					</executions>
				</plugin>			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>edu.berkeley.bps.services</groupId>
			<artifactId>services.common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>edu.berkeley.bps.services</groupId>
			<artifactId>services.corpus</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>edu.berkeley.bps.services</groupId>
			<artifactId>services.graphbuilder</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>edu.berkeley.bps.services</groupId>
			<artifactId>services.user</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>edu.berkeley.bps.services</groupId>
			<artifactId>services.workspace</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.1</version>
			<scope>test</scope>
		</dependency>

		<!-- Declaring the following provided to make our war smaller
		     BE CAREFUL of pickin up new versions.
				 For a developer pom, easier to just bundle everything in our war. 
				 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.13</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
</project>
