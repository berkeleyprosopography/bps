<!-- This is largely obsolete, and can probably be deleted soon. Use mvn instead. -->
<project name="services" default="install" basedir=".">
	<description>
        bps services
    </description>
	<!-- environment should be declared before reading build.properties -->
	<property environment="env" />
	<!-- set global properties for this build -->
	<property file="build.properties" />
	<property name="mvn.opts" value="" />
	<property name="src" location="src"/>
  <property name="javadoc.jar" value="edu.berkeley.bps.services-javadoc.jar"/>

	<condition property="osfamily-unix">
		<os family="unix" />
	</condition>
	<condition property="osfamily-windows">
		<os family="windows" />
	</condition>

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
	</target>

	<target name="install" depends="install-unix,install-windows"
            description="mvn install" />

	<target name="install-unix" if="osfamily-unix">
		<exec executable="mvn" failonerror="true">
			<arg value="install" />
			<arg value="-Dmaven.test.skip=true" />
			<arg value="${mvn.opts}" />
		</exec>
	</target>

	<target name="install-windows" if="osfamily-windows">
		<exec executable="cmd" failonerror="true">
			<arg value="/c" />
			<arg value="mvn.bat" />
			<arg value="install" />
			<arg value="-Dmaven.test.skip=true" />
			<arg value="${mvn.opts}" />
		</exec>
	</target>

	<target name="clean" depends="clean-unix,clean-windows"
            description="Delete target directories" >
		<delete dir="${basedir}/build"/>
	</target>
	<target name="clean-unix" if="osfamily-unix">
		<exec executable="mvn" failonerror="true">
			<arg value="clean" />
			<arg value="${mvn.opts}" />
		</exec>
	</target>
	<target name="clean-windows" if="osfamily-windows">
		<exec executable="cmd" failonerror="true">
			<arg value="/c" />
			<arg value="mvn.bat" />
			<arg value="clean" />
			<arg value="${mvn.opts}" />
		</exec>
	</target>

	<target name="test" depends="test-unix,test-windows" description="Run tests" />
	<target name="test-unix" if="osfamily-unix">
		<exec executable="mvn" failonerror="true">
			<arg value="test" />
			<arg value="${mvn.opts}" />
		</exec>
	</target>
	<target name="test-windows" if="osfamily-windows">
		<exec executable="cmd" failonerror="true">
			<arg value="/c" />
			<arg value="mvn.bat" />
			<arg value="test" />
			<arg value="${mvn.opts}" />
		</exec>
	</target>

	<target name="doc" depends="install,doc-unix,doc-windows" description="Build Java API docs">
			<mkdir dir="${basedir}/target" />
			<jar destfile="${basedir}/target/${javadoc.jar}"
					 basedir="${basedir}/target/site"
					 />
	</target>
	<target name="doc-unix" if="osfamily-unix">
			<exec executable="mvn" failonerror="true">
					<arg value="javadoc:aggregate" />
					<arg value="${mvn.opts}" />
			</exec>
	</target>
	<target name="doc-windows" if="osfamily-windows">
			<exec executable="cmd" failonerror="true">
					<arg value="/c" />
					<arg value="mvn.bat" />
					<arg value="javadoc:aggregate" />
					<arg value="${mvn.opts}" />
			</exec>
	</target>

	<target name="create_db" depends="checkvars" 
            description="create database(s), invoke subtasks for indexes, etc.">
		<ant antfile="common/build.xml" target="create_db" inheritAll="false"/>
		<ant antfile="corpus/build.xml" target="create_db" inheritAll="false"/>
		<ant antfile="graphbuilder/build.xml" target="create_db" inheritAll="false"/>
		<ant antfile="user/build.xml" target="create_db" inheritAll="false"/>
		<ant antfile="workspace/build.xml" target="create_db" inheritAll="false"/>
		<ant antfile="sna/build.xml" target="create_db" inheritAll="false"/>
	</target>

	<target name="deploy" depends="checkvars,install"
            description="deploy services in ${jee.server.bps}">
		<ant antfile="common/build.xml" target="deploy" inheritAll="false"/>
		<ant antfile="corpus/build.xml" target="deploy" inheritAll="false"/>
		<ant antfile="graphbuilder/build.xml" target="deploy" inheritAll="false"/>
		<ant antfile="user/build.xml" target="deploy" inheritAll="false"/>
		<ant antfile="workspace/build.xml" target="deploy" inheritAll="false"/>
		<ant antfile="webapp/build.xml" target="deploy" inheritAll="false"/>
		<ant antfile="sna/build.xml" target="deploy" inheritAll="false"/>
	</target>

	<target name="checkvars">
		<fail unless="env.BPS_JEESERVER_HOME" 
							message="Required environment variable BPS_JEESERVER_HOME has not been set."/>
		<fail unless="env.DB_USER" 
							message="Required environment variable DB_USER has not been set."/>
		<fail unless="env.DB_PASSWORD" 
							message="Required environment variable DB_PASSWORD has not been set."/>
		<fail unless="env.DB_PASSWORD_BPS" 
							message="Required environment variable DB_PASSWORD_BPS has not been set."/>
	</target>

	<target name="undeploy" depends="checkvars"
            description="undeploy services from ${jee.server.bsp}">
		<ant antfile="common/build.xml" target="undeploy" inheritAll="false"/>
		<ant antfile="corpus/build.xml" target="undeploy" inheritAll="false"/>
		<ant antfile="graphbuilder/build.xml" target="undeploy" inheritAll="false"/>
		<ant antfile="user/build.xml" target="undeploy" inheritAll="false"/>
		<ant antfile="workspace/build.xml" target="undeploy" inheritAll="false"/>
		<ant antfile="webapp/build.xml" target="undeploy" inheritAll="false"/>
		<ant antfile="sna/build.xml" target="undeploy" inheritAll="false"/>
	</target>

	<target name="eclipse" depends="eclipse-unix,eclipse-windows" description="Generate Eclipse files" />
	<target name="eclipse-unix" if="osfamily-unix">
		<exec executable="mvn" failonerror="true">
			<arg value="eclipse:clean" />
			<arg value="eclipse:eclipse" />
			<arg value="${mvn.opts}" />
		</exec>
		<exec executable="fixeclipse" failonerror="true" />
	</target>
	<target name="eclipse-windows" if="osfamily-windows">
		<exec executable="cmd" failonerror="true">
			<arg value="/c" />
			<arg value="mvn.bat" />
			<arg value="eclipse:clean" />
			<arg value="eclipse:eclipse" />
			<arg value="${mvn.opts}" />
		</exec>
	</target>

</project>
