<project name="corpus" default="install" basedir=".">
    <description>
        bps corpus module
    </description>
    <!-- set global properties for this build -->
    <property name="build_root" value=".."/>
    <!-- enviornment should be declared before reading build.properties -->
    <property environment="env" />
    <property file="${build_root}/build.properties" />
    <property name="mvn.opts" value="" />
    <property name="src" location="src"/>
    <property name="build" location="build"/>
		<property name="db.script.dir" location="target/db"/>

    <condition property="osfamily-unix">
        <os family="unix" />
    </condition>
    <condition property="osfamily-windows">
        <os family="windows" />
    </condition>

    <target name="install" depends="install-unix,install-windows"
            description="Install" />
    <target name="install-unix" if="osfamily-unix">
        <exec executable="mvn" failonerror="true">
            <arg value="install" />
            <arg value="-Dmaven.test.skip=true" />
            <arg value="-f" />
            <arg value="${basedir}/pom.xml" />
            <arg value="-N" />
            <arg value="${mvn.opts}" />
        </exec>
    </target>
    <target name="install-windows" if="osfamily-windows">
        <exec executable="cmd" failonerror="true">
            <arg value="/c" />
            <arg value="mvn.bat" />
            <arg value="install" />
            <arg value="-Dmaven.test.skip=true" />
            <arg value="-f" />
            <arg value="${basedir}/pom.xml" />
            <arg value="-N" />
            <arg value="${mvn.opts}" />
        </exec>
    </target>

    <target name="clean" depends="clean-unix,clean-windows"
            description="Delete target directories" >
        <delete dir="${build}"/>
    </target>
    <target name="clean-unix" if="osfamily-unix">
        <exec executable="mvn" failonerror="true">
            <arg value="clean" />
            <arg value="${mvn.opts}" />
        </exec>
    </target>
    <target name="clean-windows" if="osfamily-windows">
        <exec executable="cmd" failonerror="true">
            <arg value="/c" />
            <arg value="mvn.bat" />
            <arg value="clean" />
            <arg value="${mvn.opts}" />
        </exec>
    </target>

    <target name="test" depends="test-unix,test-windows" description="Run tests" />
    <target name="test-unix" if="osfamily-unix">
        <exec executable="mvn" failonerror="true">
            <arg value="test" />
            <arg value="${mvn.opts}" />
        </exec>
    </target>
    <target name="test-windows" if="osfamily-windows">
        <exec executable="cmd" failonerror="true">
            <arg value="/c" />
            <arg value="mvn.bat" />
            <arg value="test" />
            <arg value="${mvn.opts}" />
        </exec>
    </target>

		<target name="setup_sql" description="copy init_db scripts, replacing keywords">
			<copy todir="${db.script.dir}">
				<fileset dir="${src}/main/resources/schemas"/>
				<filterset>
					<!-- Note: double-subs from build.props (where build.props sets from env) fail -->
					<filter token="DB_NAME" value="${db.name}" />
					<filter token="DB_USER_BPS" value="${db.bps.user}" />
					<filter token="DB_PASSWORD_BPS" value="${env.DB_PASSWORD_BPS}" />
				</filterset>
			</copy>
		</target>

    <target name="create_db" depends="setup_sql"
            description="create tables(s), indices for account service">
				<sql driver="${db.jdbc.driver.class}"
             url="${db.jdbc.bps.url}"
             userid="${db.user}"
             password="${db.user.password}"
             src="${db.script.dir}/corpus.sql">
            <classpath>
                <pathelement path="${db.driver.jar}"/>
            </classpath>
					</sql>
    </target>

</project>
